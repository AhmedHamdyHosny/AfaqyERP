@model Afaqy_Store.Models.DeliveryNoteDetailsViewModel
@using BeyondThemes.Bootstrap;
@using Newtonsoft.Json;
@{
    ViewBag.Title = Resources.Store.DeliveryDeviceNaming;
    Layout = "~/Views/Shared/_Popup.cshtml";
}

<style>
    .row-dropdownlist {
        height: 22px;
        padding: 0px 5px;
    }

    .gridcustom-select {
        position: absolute;
        height: 22px;
        width: 37%;
    }

    .gridcustom-select.open > a.dropdown-toggle {
        line-height: 22px;
    }
    
    .gridcustom-select > a.dropdown-toggle {
         height: 22px;
         line-height: 22px;
    }
</style>
<div class="modal-header">
    <button type="button" class="close" ng-click="cancel()" aria-hidden="true">&times;</button>
    <h2 class="modal-title">@Resources.Store.DeliveryDeviceNaming</h2>
</div>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form" }))
{
    <div class="modal-body withVScroll">
        @Html.AntiForgeryToken()
        <div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @{Html.RenderAction("Partial_DeliveryDetails", "DeliveryNote", new { deliveryNote = Model });}
        </div>
        <div class="row" ng-init="bindDeliveryDetailsAndDevicesGirdData()">
            <div class="col-xs-12 form-group">
                @using (var tabs = Html.Bootstrap().Begin(new Tabs("DeliveryTabs").Justified()))
                {
                    tabs.Tab(Resources.Store.DelieryDetails, BootstrapColors.Danger);
                    tabs.Tab(Resources.Store.Devices, BootstrapColors.Success);

                    using (tabs.BeginPanel())
                    {
                        <div class="form-group">
                            @{ Html.RenderAction("Partial_Grid", "Common", new { GridId = "deliveryDetailsGrid", UiGrid = "deliveryDetailsGridOptions", EnablePagination = false, RowSelection = false }); }
                        </div>
                    }
                    using (tabs.BeginPanel())
                    {
                         <div class="form-group">
                            @{ Html.RenderAction("Partial_Grid", "Common", new { GridId = "deliveryDevicesGrid", UiGrid = "deliveryDevicesGridOptions", EnablePagination = false, RowSelection = false }); }
                         </div>
                    }
                }
            </div>
        </div>
        <div class="row">
            @Html.HiddenFor(model => model.TransactionId);
        </div>
    </div>
    <div class="modal-footer">
        <input type="submit" value="@Resources.Resource.ButtonSave" class="btn btn-success" />
        <button class="btn btn-default" type="button" ng-click="cancel()">@Resources.Resource.ButtonCancel</button>
    </div>
}

@section scripts {
    <script>
        var deliveryDetailsData = @Html.Raw(JsonConvert.SerializeObject(Model.DeliveryDetails));
        var deliveryDevicesData = @Html.Raw(JsonConvert.SerializeObject(Model.DeliveryDevices));
        var namingTypes = @Html.Raw(JsonConvert.SerializeObject((List<SelectListItem>)ViewBag.NamingTypes));

        var deliveryDetailsGridColumnDefs = [
            { field: 'fa_name', name: '@Resources.Store.ItemFamily', width: 150 },
            { field: 'ia_name', name: '@Resources.Store.DeviceModelType', width: 200 },
            { field: 'Quantity', name: '@Resources.Store.Quantity', width: 100 },
            { field: 'Note', name: '@Resources.Resource.Note', width: 290 }
        ];

        var deliveryDeviceGridColumnDefs = [
            { field: 'IMEI', name: '@Resources.Store.DeviceIMEI',
                width: 200
            },
            {
                name: '@Resources.Store.DeliveryNamingType',
                cellTemplate:
                    '<div class="ui-grid-cell-contents ng-binding ng-scope" uib-dropdown dropdown-append-to-body >' +
                    '<div class="form-group">' +
                    '<select class="form-control row-dropdownlist" ng-model="row.entity.DeviceNamingType" name="DeliveryDevice[{{grid.renderContainers.body.visibleRowCache.indexOf(row)}}].DeviceNamingTypeId" >' +
                    '<option ng-repeat="nameType in row.entity.NamingTypes" value="{{nameType.Value}}">{{nameType.Text}}</option>' +
                    '</select>' +
                    '</div>'+
                    '</div>',
                enableSorting: false, enableFiltering: false, enableHiding: false,
                width: 150
            },
            {
                name: '@Resources.Store.DeliveryDeviceNaming_en',
                cellTemplate:
                    '<div class="ui-grid-cell-contents ng-binding ng-scope" uib-dropdown dropdown-append-to-body >' +
                    '<div class="form-group">' +
                    '<input name="DeliveryDevice[{{grid.renderContainers.body.visibleRowCache.indexOf(row)}}].DeviceNaming_en" ng-model="row.entity.DeviceNaming_en" class="form-control" />' +
                    '</div>'+
                    '</div>',
                enableSorting: false, enableFiltering: false, enableHiding: false,
                width: 150
            },
             {
                 name: '@Resources.Store.DeliveryDeviceNaming_ar',
                 cellTemplate:
                     '<div class="ui-grid-cell-contents ng-binding ng-scope" uib-dropdown dropdown-append-to-body >' +
                     '<div class="form-group">' +
                     '<input name="DeliveryDevice[{{grid.renderContainers.body.visibleRowCache.indexOf(row)}}].DeviceNaming_ar" ng-model="row.entity.DeviceNaming_ar" class="form-control" />' +
                     '</div>'+
                     '</div>',
                 enableSorting: false, enableFiltering: false, enableHiding: false,
                 width: 150
             },
            {
                name: '@Resources.Resource.Note',
                cellTemplate: '<div class="ui-grid-cell-contents ng-binding ng-scope" >' +
                        '<div class="form-group"> ' +
                        '<input class="form-control girdRowControl" ng-model="row.entity.Note" name="DeliveryDevice[{{grid.renderContainers.body.visibleRowCache.indexOf(row)}}].Note" />' +
                        '</div>'+
                        ' </div>',
                enableSorting: false, enableFiltering: false, enableHiding: false,
                width: 200
            }
        ];

        $(document).ready(function () {
            $('#form').submit(function (event) {
                if (!$(this).valid()) {
                    event.preventDefault();
                }
            });
        });
    </script>
}
