@model Afaqy_Store.DataLayer.DeliveryRequest
@using Classes.Helper;

@{
    ViewBag.Title = Resources.Store.DeliveryRequestCreate;
    Layout = "~/Views/Shared/_Popup.cshtml";
}

@*<style>
    #grid.ui-grid-cell div select option:first-child[value=""] {
        display: none;
    }
</style>*@

<style>
    .cust-input-icon {
        position: relative;
    }
    
    .cust-input-icon > i {
        position: absolute;
        display: block;
        transform: translate(0, -50%);
        top: 50%;
        /*pointer-events: none;*/
        width: 25px;
        text-align: center;
        font-style: normal;
    }

    .cust-input-icon-right > i {
        right: 0;
    }

    .cust-input-icon-right > input {
        text-align: left;
        padding-right: 25px;
    }
</style>

<div class="modal-header">
    <button type="button" class="close" ng-click="cancel()" aria-hidden="true">&times;</button>
    <h2 class="modal-title">@Resources.Store.DeliveryRequestNew</h2>
</div>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form" }))
{
    <div class="modal-body" style="overflow-y: scroll; overflow-x: hidden; height:480px;">
        @Html.AntiForgeryToken()
        <div >
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-xs-6 form-group">
                    @Html.LabelFor(model => model.SaleTransactionTypeId, Resources.Sales.SaleTransactionType, htmlAttributes: new { @class = "text-info" })
                    @Html.CustomDropdownListFor(model => model.SaleTransactionTypeId, (IEnumerable<CustomSelectListItem>)ViewBag.SaleTransactionTypeId, null, null, htmlAttributes: new { @class = "form-control", @name = "SaleTransactionTypeId", @id = "SaleTransactionTypeId", data_ng_model= "SaleTransactionType", data_ng_change= "changeSaleTransactionType(SaleTransactionType)" })
                    @Html.ValidationMessageFor(model => model.SaleTransactionTypeId, "", new { @class = "text-danger" })
                </div>
                <div class="col-xs-6 form-group" id="SaleForCustomer" ng-show="!ShowDemoTransactionType">
                    @Html.LabelFor(model => model.CustomerId, Resources.ServerManagement.Customer, htmlAttributes: new { @class = "text-info" })
                    @Html.CustomDropdownListFor(model => model.CustomerId, (IEnumerable<CustomSelectListItem>)ViewBag.CustomerId, null, Resources.Resource.SelectItem, htmlAttributes: new { @class = "form-control", @name = "CustomerId", @id = "CustomerId", data_ng_model = "SelectedCustomer", data_ng_change = "changeCustomerContact(SelectedCustomer)" })
                    @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                </div>
                <div class="col-xs-6 form-group" id="DemoForCustomer" ng-show="ShowDemoTransactionType">
                    <label class = "text-info">@Resources.ServerManagement.Customer</label> 
                    <div class="cust-input-icon cust-input-icon-right">
                        <i ng-click="addDemoCustomer()" class="fa fa-user-plus"></i>
                        @Html.HiddenFor(model => model.CustomerId)
                        @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                    </div> 
                    @*<input class = "form-control" id = "CustomerName" data-ng-model="CustomerName" required/>*@
                    @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-xs-6 form-group">
                    @Html.LabelFor(model => model.CustomerContactId, Resources.Sales.CustomerContact, htmlAttributes: new { @class = "text-info" })
                    <select name="CustomerContactId" id="CustomerContactId" ng-model="CustomerContact" >
                        <option >@Resources.Resource.SelectItem</option>
                        <option ng-repeat="contact in CustomerContacts" value="{{contact.Value}}">{{contact.Text}}</option>
                    </select>
                    <button ng-click="addCustomerContact()"> <i class="fa fa-user-plus"></i></button>
                    @Html.ValidationMessageFor(model => model.CustomerContactId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-xs-6  form-group">
                    <label class="text-info" >@Resources.Store.DeliveryDate</label>
                    <span class="input-icon icon-right">
                        <input name="DeliveryDate_Str" class="form-control date-picker" id="DeliveryDate" type="text" data-date-format="dd/mm/yyyy">
                        <i class="fa fa-calendar"></i>
                    </span>
                </div>
                <div class="col-xs-6 form-group">
                    <label class="text-info" >@Resources.Store.DeliveryTime</label>
                    <div class="input-group">
                        <input class="form-control" id="DeliveryTime" name="DeliveryTime_Str" type="text">
                        <span class="input-group-addon">
                            <i class="fa fa-clock-o"></i>
                        </span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-6 form-group">
                    @Html.LabelFor(model => model.Note, Resources.Store.DeliveryRequestNote, htmlAttributes: new { @class = "text-info" })
                    @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                </div>
            </div>
            
            
            <div class="table-toolbar">
                <a ng-click="create()" class="btn purple" id="addBtn">
                    <i class="fa fa-plus"></i> @Resources.Resource.ButtonAdd
                </a>
                <a ng-click="DeleteItems($event);" class="btn btn-danger">
                    <i class="fa fa-times"></i> @Resources.Resource.ButtonDelete
                </a>
            </div>
            <div class="form-group">
                @{ Html.RenderAction("Partial_Grid", "Common", new { EnablePagination = false}); }
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <input type="submit" value="@Resources.Resource.ButtonSave" class="btn btn-success" />
        <button class="btn btn-default" type="button" ng-click="cancel()" >@Resources.Resource.ButtonCancel</button>
    </div>
}

@section scripts {
    <!--Jquery Select2-->
    <script src="~/Content/js/select2/select2.js"></script>
    <!--Bootstrap Date Picker-->
    <script src="~/Content/js/datetime/bootstrap-datepicker.js"></script>
    <!--Bootstrap Time Picker-->
    <script src="~/Content/js/datetime/bootstrap-timepicker.js"></script>

    <script>
        $(document).ready(function () {
            //--Jquery Select2--
            $("#CustomerId").select2();
            //$("#SaleTransactionTypeId").select2();
            //$(".gridSelection").select2();
            //$("#ddl").select2();

            //--Bootstrap Date Picker--
            $('.date-picker').datepicker();
            //--Bootstrap Time Picker--
            $('#DeliveryTime').timepicker();

            //--JQuery Autosize--
            //$('#textareaanimated').autosize({ append: "\n" });

            $('#form').submit(function (event) {
                if (!$(this).valid()) {
                    event.preventDefault();
                }
            });
        });
    </script>
}




