@model Afaqy_Store.Models.SIMCardEditModel
@using Classes.Helper;
@using BeyondThemes.Bootstrap;
@{
    ViewBag.Title = Resources.ServerManagement.SIMCardEdit;
    Layout = "~/Views/Shared/_Popup.cshtml";
}

<div class="modal-header">
    <button type="button" class="close" ng-click="cancel()" aria-hidden="true">&times;</button>
    <h2 class="modal-title">@Resources.ServerManagement.SIMCardEdit</h2>
</div>


@using (Html.BeginForm())
{
    <div class="modal-body">
        @Html.AntiForgeryToken()
        <div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => Model.EditItem.SIMCardId)
            <div class="row">
                <div class="col-xs-6 form-group">
                    @Html.LabelFor(model => model.EditItem.ContractId, Resources.ServerManagement.ContractId, htmlAttributes: new { @class = "text-info" })
                    @Html.CustomDropdownListFor(m => m.EditItem.ContractId, Model.Contract, null, Resources.Resource.SelectItem, htmlAttributes: new { @class = "form-control", @name = "SystemId", @id = "SystemId" })
                    @Html.ValidationMessageFor(model => model.EditItem.ContractId, "", new { @class = "text-danger" })
                </div>
                <div class="col-xs-6 form-group">
                    @Html.LabelFor(model => model.EditItem.PurchaseDate, Resources.ServerManagement.SIMCardPurchaseDate, htmlAttributes: new { @class = "text-info" })
                    <span class="input-icon icon-right">
                        <input name="EditItem.PurchaseDate" class="form-control date-picker" id="PurchaseDate" type="text" data-date-format="dd/mm/yyyy" value="@(Model.EditItem.PurchaseDate == null ? "": ((DateTime)Model.EditItem.PurchaseDate).ToString("dd/MM/yyyy")) ">
                        <i class="fa fa-calendar"></i>
                    </span>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-6 form-group">
                    @Html.LabelFor(model => Model.EditItem.CompanySerialNumber, Resources.ServerManagement.SIMCardCompanySerialNumber, htmlAttributes: new { @class = "text-info" })
                    @Html.EditorFor(model => Model.EditItem.CompanySerialNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.EditItem.CompanySerialNumber, "", new { @class = "text-danger" })
                </div>
                <div class="col-xs-6 form-group">
                    @Html.LabelFor(model => Model.EditItem.SerialNumber, Resources.ServerManagement.SIMCardSerialNumber, htmlAttributes: new { @class = "text-info" })
                    @Html.EditorFor(model => Model.EditItem.SerialNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.EditItem.SerialNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="row">
                <div class="col-xs-6 form-group">
                    @Html.LabelFor(model => model.EditItem.GSM, Resources.ServerManagement.SIMCardGSM, htmlAttributes: new { @class = "text-info" })
                    @Html.EditorFor(model => model.EditItem.GSM, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EditItem.GSM, "", new { @class = "text-danger" })
                </div>
                <div class="col-xs-6 form-group">
                    @Html.LabelFor(model => model.EditItem.AlternativeGSM, Resources.ServerManagement.SIMCardAltGSM, htmlAttributes: new { @class = "text-info" })
                    @Html.EditorFor(model => model.EditItem.AlternativeGSM, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EditItem.AlternativeGSM, "", new { @class = "text-danger" })
                </div>
                
            </div>
            <div class="row">
                <div class="col-xs-6 form-group">
                    @Html.Bootstrap().CheckBoxFor(model => model.EditItem.IsBlock).Text(Resources.Resource.Block).HtmlAttributes(new { @class = "colored-danger" })
                </div>
            </div>
            
            <div>
                @Html.HiddenFor(model=>model.EditItem.BranchId)
                @Html.HiddenFor(model => model.EditItem.SIMCardStatusId)
                @Html.HiddenFor(model => model.EditItem.CreateUserId)
                @Html.HiddenFor(model => model.EditItem.CreateDate)
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <input type="submit" value="@Resources.Resource.ButtonSave" class="btn btn-success" />
        <button class="btn btn-default" type="button" ng-click="cancel()">@Resources.Resource.ButtonCancel</button>
    </div>
}

@section scripts{
     <!--Jquery Select2-->
    <script src="~/Content/js/select2/select2.js"></script>
    <!--Bootstrap Date Picker-->
    <script src="~/Content/js/datetime/bootstrap-datepicker.js"></script>

    <script>
        //--Jquery Select2--
        $("#ContractId").select2();

        //--Bootstrap Date Picker--
        $('.date-picker').datepicker();
    </script>
}

